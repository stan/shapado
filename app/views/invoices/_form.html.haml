-content_for :js do
  = javascript_include_tag "https://js.stripe.com/v1/"
  = javascript_include_tag "payments/application"

.invoices
  =form_for @invoice, :html => {:id => "payment-form", :"data-token" => "#{PaymentsConfig['public']}" } do |f|
    =error_messages_for @invoice

    .invoice_info
      .brand
        =image_tag "logo.png"

      .references
        %p.reference
          %strong
            = t('invoices.form.invoice_reference')
          =@invoice.order_number
        %p
          %strong
            = t('invoices.form.creation_date')
          =@invoice.created_at
        %p
          %strong
            = t('invoices.form.valid_until')
          =@invoice.created_at+1.month
      .clear

    -if @invoice.items.first["item_class"] == "ShapadoVersion"
      -version = ShapadoVersion.find(@invoice.items.first["item_id"])
      .thanks
        %p.action
          =raw t('invoices.form.upgrading_group', :group => current_group.name, :group_domain => current_group.name)

        %p
          = t('invoices.form.charging_explanation', :version_name => version.name, :version_price => version.in_dollars)
          %br
          =link_to t('invoices.form.want_to_change_plan'), plans_path

    .credit_card_form
      %h2
        = t('invoices.form.cc_details')

      =fields_for :credit_card do |ff|
        .field
          %label
            = t('invoices.form.cc_number')
          =ff.text_field :number, :class => "card-number", :autocomplete => false, :size => 20
          %small= t('invoices.form.as_it_appears')

        .cc-info
          .field
            %label
              = t('invoices.form.ccv_code')
            =ff.text_field :verification_code, :size => 4, :class => "card-cvc", :autocomplete => "off"
            %small= t('invoices.form.ccv_explanation')

          .field.date
            %label
              = t('invoices.form.expiration_date')
            -index = -1
            =ff.select :month, I18n.t("date.month_names").map{|e| [e, index+=1]}, {}, :class => "card-expiry-month"
            =ff.select :year, (Time.now.year..Time.now.year+15).to_a, {}, :class => "card-expiry-year"

    =render "invoices/invoice", :invoice => @invoice

    .buttons
      =f.submit t('invoices.form.checkout'), :class => "save submit-button"